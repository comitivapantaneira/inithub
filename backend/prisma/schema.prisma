generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  initiatives        Initiative[]
  likes              Like[]
  comments           Comment[]
  assignedInitiatives Initiative[] @relation("AssignedInitiatives")

  @@map("users")
}

model Initiative {
  id          String            @id @default(cuid())
  title       String
  description String
  status      InitiativeStatus  @default(PENDING)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  embedding   Unsupported("vector(1536)")?

  authorId     String
  author       User      @relation(fields: [authorId], references: [id])
  assignedToId String?
  assignedTo   User?     @relation("AssignedInitiatives", fields: [assignedToId], references: [id])

  likes    Like[]
  comments Comment[]

  @@map("initiatives")
}

model Like {
  id           String @id @default(cuid())
  userId       String
  initiativeId String

  user       User       @relation(fields: [userId], references: [id])
  initiative Initiative @relation(fields: [initiativeId], references: [id])

  @@unique([userId, initiativeId])
  @@map("likes")
}

model Comment {
  id           String   @id @default(cuid())
  content      String
  createdAt    DateTime @default(now())
  userId       String
  initiativeId String

  user       User       @relation(fields: [userId], references: [id])
  initiative Initiative @relation(fields: [initiativeId], references: [id])

  @@map("comments")
}

enum Role {
  USER
  ADMIN
}

enum InitiativeStatus {
  PENDING
  APPROVED
  REJECTED
}