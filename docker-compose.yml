version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: ./docker/backend.dockerfile
    container_name: init-hub-backend
    restart: always
    ports:
      - "3000:3000"
    env_file: "./.env"
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && node dist/main.js"
    networks:
      - init-hub-network

  agent:
    build:
      context: ./agent
      dockerfile: ./docker/agent.dockerfile
    container_name: init-hub-agent
    restart: always
    ports:
      - "8000:8000"
    env_file: "./.env"
    volumes:
      - ./agent:/app
    networks:
      - init-hub-network

  frontend:
    build:
      context: ./frontend
      dockerfile: ./docker/frontend.dockerfile
    container_name: init-hub-frontend
    restart: always
    ports:
      - "5173:5173"
    env_file: "./.env"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - init-hub-network
    depends_on:
      - backend
      - agent

  postgres:
    image: pgvector/pgvector:pg15
    container_name: inithub-postgres
    environment:
      POSTGRES_DB: inithub
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d inithub" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - init-hub-network

networks:
  init-hub-network:
    driver: bridge

volumes:
  pg_data:
