version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: ./docker/backend.dockerfile
    container_name: init-hub-backend
    restart: always
    ports:
      - "8000:8000"
    env_file: "./.env"
    volumes:
      - ./backend/src:/app/src
    networks:
      - init-hub-network

  agent:
    build:
      context: ./agent
      dockerfile: ./docker/agent.dockerfile
    container_name: init-hub-agent
    restart: always
    ports:
      - "8001:8000"  # avoid port clash with backend
    env_file: "./.env"
    volumes:
      - ./agent/src:/app/src
    networks:
      - init-hub-network

  frontend:
    build:
      context: ./frontend
      dockerfile: ./docker/frontend.dockerfile
    container_name: init-hub-frontend
    restart: always
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - init-hub-network
    depends_on:
      - backend

  postgres:
    image: pgvector/pgvector:0.8.0-pg17
    container_name: init-hub-postgres
    restart: always
    environment:
      POSTGRES_USER: inithub
      POSTGRES_PASSWORD: inithub
      POSTGRES_DB: comitiva_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U inithub -d comitiva_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - init-hub-network

networks:
  init-hub-network:
    driver: bridge
